######What is BNAT?######

BNAT (Broken NAT) is namely defined as IP communication that is being improperly nat'd to create an inoperable communications channel.  A common example of BNAT is found in asymmetric routing where we (intentially or unintentionally) create a logical layer 3 loop in a TCP/IP session between a client and a server. This is commonly found in complex routing scenarios or situations where mistakes are "corrected" to make something work without understanding or caring about the actual flow of traffic.

Very Basic Example...

.1 ----SYN----> .2 (.1 is the client and starts a session w/ a syn to .2)
.1 <--SYN/ACK-- .3 (.3 responds to .1 with the syn/ack)

######Why does BNAT matter?######

BNAT effectively hides TCP ports from being identified by modern TCP clients and port scanning utilities like NMAP.  With the right tools, you can identify ports that would otherwise be considered as closed/filtered which can be converted into legitimate open ports.

######How can I find BNAT?######

By scanning your public IPv4 space while your scanning host is directly connected to the Internet.  Due to the nature of BNAT, scanning from behind a firewall/router/natting service can strip off parts of the return BNAT communication as it is not seen as part of the originating TCP session and can be used to hijack the broken session.

######Instructions for BNAT Scanner Setup on Ubuntu 10.04 LTS (lucid) 32-bit######

##Install Requirements##

Run "apt-get install build-essential ruby1.8-dev libpcap-dev libpcap-ruby libpcap-dev libpcap-ruby wireshark tcpdump ruby rubygems" as root

Run "gem install pcaprub packetfu netaddr" as root

##Set Path Variables##
Add "export RUBYOPT=rubygems" to .bashrc file in home directory

##Download Scanner Code##

Run "wget https://github.com/claudijd/BNAT-Suite/blob/master/bnat-scan.rb " as root

##Prevent RST’s from Breaking Connections##
Run "iptables -A OUTPUT -p tcp --tcp-flags RST RST -j DROP" as root

##Run BNAT Scan##
Run "ruby bnat-scan.rb <IP/CIDR NETBLOCK> " as root